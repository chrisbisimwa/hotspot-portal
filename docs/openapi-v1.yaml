openapi: 3.0.3
info:
  title: HotspotPortal API
  description: REST API for HotspotPortal - Mikrotik Hotspot Management System
  version: 1.0.0
  contact:
    name: HotspotPortal Support
    email: support@hotspotportal.com

servers:
  - url: http://localhost/api/v1
    description: Local development server
  - url: https://api.hotspotportal.com/v1
    description: Production server

paths:
  /auth/login:
    post:
      summary: User authentication
      description: Authenticate user with email/phone and password
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - identifier
                - password
              properties:
                identifier:
                  type: string
                  description: Email or phone number
                  example: "user@example.com"
                password:
                  type: string
                  format: password
                  example: "password123"
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /user-profiles:
    get:
      summary: List active user profiles
      description: Get list of all active user profiles (public endpoint)
      tags:
        - User Profiles
      responses:
        '200':
          description: List of user profiles
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserProfile'
                  meta:
                    type: object
                  errors:
                    type: null

  /orders:
    get:
      summary: List user orders
      description: Get paginated list of current user's orders
      tags:
        - Orders
      security:
        - BearerAuth: []
      parameters:
        - name: per_page
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 15
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderListResponse'

    post:
      summary: Create new order
      description: Create a new order for user profile packages
      tags:
        - Orders
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          oneOf:
            - type: object
            - type: array
            - type: null
        meta:
          type: object
        errors:
          oneOf:
            - type: object
            - type: null

    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            success:
              type: boolean
              example: false
            message:
              type: string

    AuthResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                token:
                  type: string
                  example: "1|abc123def456..."
                user:
                  $ref: '#/components/schemas/User'

    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          format: email
          example: "john@example.com"
        phone:
          type: string
          example: "+243123456789"
        user_type:
          type: string
          example: "customer"
        status:
          type: string
          example: "active"
        roles:
          type: array
          items:
            type: string
          example: ["user"]

    UserProfile:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "2H Package"
        description:
          type: string
          example: "2 hours internet access"
        price:
          type: number
          format: decimal
          example: 1000.00
        validity_hours:
          type: integer
          example: 2
        is_active:
          type: boolean
          example: true

    Order:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 1
        quantity:
          type: integer
          example: 2
        unit_price:
          type: number
          format: decimal
          example: 1000.00
        total_amount:
          type: number
          format: decimal
          example: 2000.00
        status:
          type: string
          example: "pending"
        user_profile:
          $ref: '#/components/schemas/UserProfile'

    CreateOrderRequest:
      type: object
      required:
        - user_profile_id
        - quantity
      properties:
        user_profile_id:
          type: integer
          example: 1
        quantity:
          type: integer
          minimum: 1
          example: 2

    OrderResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Order'

    OrderListResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Order'
            meta:
              type: object
              properties:
                pagination:
                  type: object
                  properties:
                    current_page:
                      type: integer
                    per_page:
                      type: integer
                    total:
                      type: integer
                    last_page:
                      type: integer

tags:
  - name: Authentication
    description: User authentication and authorization
  - name: User Profiles
    description: Hotspot user packages and profiles
  - name: Orders
    description: Order management
  - name: Payments
    description: Payment processing
  - name: Hotspot Users
    description: Hotspot user accounts
  - name: Sessions
    description: Hotspot session tracking
  - name: Notifications
    description: User notifications
  - name: Admin
    description: Administrative endpoints (admin only)

# TODO: Complete documentation for all endpoints
# - /auth/logout
# - /me
# - /payments/*
# - /hotspot-users/*
# - /sessions
# - /notifications/*
# - /admin/*
# - /payments/callback/serdipay